version: "3.6"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - default.env
    volumes:
      - $HOME/.ssh/:/root/.ssh
      - $HOME/.aws:/root/.aws
    ports:
      - 8080:8080

  dynamodb-ui:
    depends_on:
      - dynamodb
    image: aaronshaf/dynamodb-admin:latest
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb:8000
    ports:
      - 8001:8001

  dynamodb_local_mock_unsupported_api:
    depends_on:
      - dynamodb
    image: mwaaas/dynamodb_local_mock_unsupported_api:latest
    environment:
      - DYNAMO_HOST=dynamodb
      - DYNAMO_PORT=8000
    ports:
      - 8002:4567

  dynamodb:
    image: amazon/dynamodb-local:1.11.477
    command: -jar DynamoDBLocal.jar -inMemory -sharedDb
    ports:
      - 3307:8000
    environment:
      - AWS_ACCESS_KEY_ID=access_key
      - AWS_SECRET_ACCESS_KEY=secret_key
      - "AWS_DEFAULT_REGION=eu-west-1"

  # localaws endpoints configuration  documentation
  # https://github.com/localstack/localstack#overview
  localaws:
    image: localstack/localstack:0.10.4
    ports:
      - "4567-4584:4567-4584"
      - "${PORT_WEB_UI-8088}:${PORT_WEB_UI-8080}"
    environment:
      - "SERVICES=sts,sqs,sns,cloudformation:4581"
      - DEFAULT_REGION=eu-west-1
      - "HOSTNAME_EXTERNAL=${HOSTNAME_EXTERNAL-localaws}"

  # used to publish message to both local and cloud sns
  # via http request hence you can use postman and curl
  sns_simulator:
    image: mwaaas/aws_helper:0.0.4
    volumes:
      - $HOME/.aws:/root/.aws
    ports:
      - 4200:80

  dev_tools:
    build:
      context: .
      dockerfile: DevToolsDockerfile
    depends_on:
      - localaws
      - dynamodb_local_mock_unsupported_api
      - dynamodb-ui
    links:
      - localaws
      - dynamodb
    working_dir: /usr/src/app/devops
    environment:
      - ANSIBLE_STDOUT_CALLBACK=debug
    volumes:
      - $HOME/.aws:/root/.aws
      - ./:/usr/src/app